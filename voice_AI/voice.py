import google.generativeai as genai
import speech_recognition as sr
from gtts import gTTS
import sounddevice as sd
import scipy.io.wavfile as wav
from playsound import playsound
import os

# ====== 1. C·∫•u h√¨nh Gemini API ======
API_KEY = "AIzaSyD0r0KdTPHshd9FTCT1OCmMnC8Ug5wo-9E"   # ‚ö†Ô∏è thay b·∫±ng API key th·∫≠t
genai.configure(api_key=API_KEY)
model = genai.GenerativeModel("gemini-2.0-flash")

# ====== 2. Text-to-Speech b·∫±ng gTTS + playsound ======
def speak(text):
    try:
        filename = "reply.mp3"
        tts = gTTS(text=text, lang="vi")
        tts.save(filename)

        # üî• Ph√°t lu√¥n kh√¥ng c·∫ßn m·ªü app ngo√†i
        playsound(filename)

        return filename
    except Exception as e:
        print("‚ùå L·ªói TTS:", e)
        return None

# ====== 3. Thu √¢m mic b·∫±ng sounddevice ======
def listen_from_mic(duration=5, fs=16000):
    print(f"üé§ ƒêang nghe trong {duration} gi√¢y...")
    recording = sd.rec(int(duration * fs), samplerate=fs, channels=1, dtype="int16")
    sd.wait()
    filename = "input.wav"
    wav.write(filename, fs, recording)
    
    # Nh·∫≠n d·∫°ng v·ªõi Google Speech Recognition
    r = sr.Recognizer()
    with sr.AudioFile(filename) as source:
        audio = r.record(source)
    try:
        text = r.recognize_google(audio, language="vi-VN")
        print("üó£Ô∏è B·∫°n n√≥i:", text)
        return text
    except sr.UnknownValueError:
        print("‚ùå Kh√¥ng nh·∫≠n d·∫°ng ƒë∆∞·ª£c gi·ªçng n√≥i.")
        return None
    except sr.RequestError as e:
        print("‚ùå L·ªói khi g·ªçi Google Speech Recognition:", e)
        return None

# ====== 4. Chat loop ======
def chat_loop():
    while True:
        user_text = listen_from_mic(duration=5)
        if not user_text:
            continue
        if user_text.lower() in ["tho√°t", "d·ª´ng", "exit", "quit"]:
            print("üëã K·∫øt th√∫c tr√≤ chuy·ªán.")
            break

        # G·ª≠i l√™n Gemini API
        response = model.generate_content(user_text)
        bot_reply = response.text
        print("ü§ñ Bot:", bot_reply)

        # Bot n√≥i l·∫°i
        speak(bot_reply)

if __name__ == "__main__":
    chat_loop()
